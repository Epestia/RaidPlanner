@page "/raid"
@using RaidPlanner.Front.Models
@using RaidPlanner.Front.Services
@inject RaidService RaidService

<div class="raid-container">
    <h2>Liste des Raids</h2>

    @if (groupedRaids == null)
    {
        <p>Chargement...</p>
    }
    else if (groupedRaids.Count == 0)
    {
        <p>Aucun raid trouvé.</p>
    }
    else
    {
        @foreach (var group in groupedRaids)
        {
            <div class="raid-category">@group.Key</div>
            <ul class="raid-list">
                @foreach (var raid in group.Value)
                {
                    <li class="raid-item">
                        <strong>@raid.Name</strong><br />
                        Difficulté : @raid.Difficulty<br />
                        Niveau minimum : @raid.MinLevel
                    </li>
                }
            </ul>
        }
    }
</div>

@code {
    private Dictionary<string, List<RaidDto>>? groupedRaids;

    protected override async Task OnInitializedAsync()
    {
        var raids = await RaidService.GetRaidsAsync();

        groupedRaids = raids
            .GroupBy(r => GetRaidCategory(r.Name))
            .OrderBy(g => g.Key)
            .ToDictionary(g => g.Key, g => g.OrderBy(r => r.Name).ToList());
    }

    private string GetRaidCategory(string name)
    {
        if (name.Contains("Alexander", StringComparison.OrdinalIgnoreCase)) return "Alexander";
        if (name.Contains("Omega", StringComparison.OrdinalIgnoreCase) ||
            name.Contains("Deltastice", StringComparison.OrdinalIgnoreCase) ||
            name.Contains("Sigmastice", StringComparison.OrdinalIgnoreCase) ||
            name.Contains("Alphastice", StringComparison.OrdinalIgnoreCase)) return "Omega";
        if (name.Contains("Éden", StringComparison.OrdinalIgnoreCase) ||
            name.Contains("Eden", StringComparison.OrdinalIgnoreCase)) return "Eden";
        if (name.Contains("Pandæmonium", StringComparison.OrdinalIgnoreCase)) return "Pandæmonium";
        if (name.Contains("Arckadion", StringComparison.OrdinalIgnoreCase) ||
            name.Contains("Poids mi-lourds", StringComparison.OrdinalIgnoreCase) ||
            name.Contains("Poids lourds-légers", StringComparison.OrdinalIgnoreCase)) return "The Arckadion";
        if (name.Contains("Bahamut", StringComparison.OrdinalIgnoreCase)) return "Bahamut";
        return "Autres";
    }
}
