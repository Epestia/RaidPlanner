@page "/login"
@using RaidPlanner.Front.Models
@using RaidPlanner.Front.Services
@inject AuthService AuthService
@inject NavigationManager Navigation

<h3>Connexion</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p class="text-danger">@errorMessage</p>
}

<EditForm Model="@loginDto" OnValidSubmit="HandleLogin">
    <InputText @bind-Value="loginDto.Username" placeholder="Nom d'utilisateur" class="form-control" />
    <InputText @bind-Value="loginDto.Password" type="password" placeholder="Mot de passe" class="form-control mt-2" />
    <button type="submit" class="btn btn-primary mt-2">Se connecter</button>
</EditForm>

@code {
    private AuthDto loginDto = new AuthDto();
    private string errorMessage;

    private async Task HandleLogin()
    {
        bool success = await AuthService.LoginAsync(loginDto);
        if (success)
        {
            Navigation.NavigateTo("/");
        }
        else
        {
            errorMessage = "Nom d'utilisateur ou mot de passe invalide.";
        }
    }}